/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pandora.TileMap;

import java.awt.GridLayout;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import pandora.Game;

/**
 *
 * @author achillis
 */
public class MapEditor extends javax.swing.JPanel {

    private MapPanel1 panelmap;
    private TilePanel1 teilpanel;
    private OptionPanel1 option;
    private LayoutManager layoutManager;
    private String currentMapFilePath;
    private String selectedFilePath;
    private Game game;

    /**
     * Creates new form MapEditor
     */
    public MapEditor(Game game) {
        initComponents();
        this.game = game;
        setLayout(new GridLayout());
        this.option = new OptionPanel1();

        MapIO.loadProjectAsXML("image/example_map.tmf", this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();

        setLayout(new java.awt.GridLayout(1, 1, 1, 1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the panelmap
     */
    public MapPanel1 getPanelmap() {
        return panelmap;
    }

    public void createNewMapDialog() {
        NewMapDialog mapDialog = new NewMapDialog(this);
        //game.setFieldWidth((Integer)mapDialog.getyTiles().getValue());
        //game.setFieldHeight((Integer) mapDialog.getyTiles().getValue());
        //game.initMap();
    }

    public void SaveMap() {
        JFileChooser dialog = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Tile Mapper files", "tmf");
        dialog.setFileFilter(filter);

        int response = dialog.showSaveDialog(this);
        if (response == JFileChooser.APPROVE_OPTION) {
            currentMapFilePath = dialog.getSelectedFile().toString();
            MapIO.exportProjectAsXML(dialog.getSelectedFile().toString(), this);
        }
    }

    public void LoadMap() {
        JFileChooser dialog = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Tile Mapper files", "tmf");
        dialog.setFileFilter(filter);

        int response = dialog.showOpenDialog(this);
        if (response == JFileChooser.APPROVE_OPTION) {
            currentMapFilePath = dialog.getSelectedFile().toString();
            MapIO.loadProjectAsXML(currentMapFilePath, this);
        }
    }

    /**
     * @param panelmap the panelmap to set
     */
    public void setPanelmap(MapPanel1 panelmap) {
        this.panelmap = panelmap;
    }

    /**
     * @return the teilpanel
     */
    public TilePanel1 getTeilpanel() {
        return teilpanel;
    }

    /**
     * @param teilpanel the teilpanel to set
     */
    public void setTeilpanel(TilePanel1 teilpanel) {
        this.teilpanel = teilpanel;
    }

    /**
     * @return the option
     */
    public OptionPanel1 getOption() {
        return option;
    }

    /**
     * @param option the option to set
     */
    public void setOption(OptionPanel1 option) {
        this.option = option;
    }

    /**
     * @return the layoutManager
     */
    public LayoutManager getLayoutManager() {
        return layoutManager;
    }

    /**
     * @param layoutManager the layoutManager to set
     */
    public void setLayoutManager(LayoutManager layoutManager) {
        this.layoutManager = layoutManager;
    }

    /**
     * @return the selectedFilePath
     */
    public String getSelectedFilePath() {
        return selectedFilePath;
    }

    /**
     * @param selectedFilePath the selectedFilePath to set
     */
    public void setSelectedFilePath(String selectedFilePath) {
        this.selectedFilePath = selectedFilePath;
    }

    /**
     * @return the game
     */
    public Game getGame() {
        return game;
    }

    /**
     * @param game the game to set
     */
    public void setGame(Game game) {
        this.game = game;
    }

}
